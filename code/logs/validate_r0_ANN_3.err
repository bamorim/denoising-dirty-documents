/home/bamorim/.local/lib/python3.5/site-packages/sklearn/cross_validation.py:42: DeprecationWarning: This module has been deprecated in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.
  "This module will be removed in 0.20.", DeprecationWarning)
/home/bamorim/.local/lib/python3.5/site-packages/sklearn/neural_network/multilayer_perceptron.py:1259: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)
/home/bamorim/.local/lib/python3.5/site-packages/sklearn/neural_network/multilayer_perceptron.py:1259: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)
/home/bamorim/.local/lib/python3.5/site-packages/sklearn/neural_network/multilayer_perceptron.py:1259: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
  y = column_or_1d(y, warn=True)
Traceback (most recent call last):
  File "validate.py", line 23, in <module>
    main()
  File "validate.py", line 19, in main
    scores = model.cross_val_score(X,y)
  File "/home/bamorim/ufrj/ic/trabalho/code/models.py", line 14, in cross_val_score
    return cross_validation.cross_val_score(self.model, X, y, cv=self.cross_validation_cv(), scoring='mean_squared_error')
  File "/home/bamorim/.local/lib/python3.5/site-packages/sklearn/cross_validation.py", line 1443, in cross_val_score
    for train, test in cv)
  File "/home/bamorim/.local/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py", line 803, in __call__
    while self.dispatch_one_batch(iterator):
  File "/home/bamorim/.local/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py", line 661, in dispatch_one_batch
    self._dispatch(tasks)
  File "/home/bamorim/.local/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py", line 570, in _dispatch
    job = ImmediateComputeBatch(batch)
  File "/home/bamorim/.local/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py", line 183, in __init__
    self.results = batch()
  File "/home/bamorim/.local/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py", line 72, in __call__
    return [func(*args, **kwargs) for func, args, kwargs in self.items]
  File "/home/bamorim/.local/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py", line 72, in <listcomp>
    return [func(*args, **kwargs) for func, args, kwargs in self.items]
  File "/home/bamorim/.local/lib/python3.5/site-packages/sklearn/cross_validation.py", line 1537, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "/home/bamorim/.local/lib/python3.5/site-packages/sklearn/neural_network/multilayer_perceptron.py", line 609, in fit
    return self._fit(X, y, incremental=False)
  File "/home/bamorim/.local/lib/python3.5/site-packages/sklearn/neural_network/multilayer_perceptron.py", line 378, in _fit
    intercept_grads, layer_units)
  File "/home/bamorim/.local/lib/python3.5/site-packages/sklearn/neural_network/multilayer_perceptron.py", line 463, in _fit_lbfgs
    args=(X, y, activations, deltas, coef_grads, intercept_grads))
  File "/usr/lib/python3.5/site-packages/scipy/optimize/lbfgsb.py", line 188, in fmin_l_bfgs_b
    **opts)
  File "/usr/lib/python3.5/site-packages/scipy/optimize/lbfgsb.py", line 320, in _minimize_lbfgsb
    f, g = func_and_grad(x)
  File "/usr/lib/python3.5/site-packages/scipy/optimize/lbfgsb.py", line 271, in func_and_grad
    f = fun(x, *args)
  File "/usr/lib/python3.5/site-packages/scipy/optimize/optimize.py", line 285, in function_wrapper
    return function(*(wrapper_args + args))
  File "/usr/lib/python3.5/site-packages/scipy/optimize/optimize.py", line 63, in __call__
    fg = self.fun(x, *args)
  File "/home/bamorim/.local/lib/python3.5/site-packages/sklearn/neural_network/multilayer_perceptron.py", line 177, in _loss_grad_lbfgs
    X, y, activations, deltas, coef_grads, intercept_grads)
  File "/home/bamorim/.local/lib/python3.5/site-packages/sklearn/neural_network/multilayer_perceptron.py", line 247, in _backprop
    deltas[i - 1] = safe_sparse_dot(deltas[i], self.coefs_[i].T)
  File "/home/bamorim/.local/lib/python3.5/site-packages/sklearn/utils/extmath.py", line 187, in safe_sparse_dot
    return fast_dot(a, b)
KeyboardInterrupt
